GitHub Homework

Как отправить ДЗ на проверку.
 1. Создайте текстовый файл как в первом ДЗ по Terminal - 
    - touch Git_Bash_homework.txt
 2. Сценарий перенесите в этот файл.
 3. На против каждого действия - напишите команду в GitBash.


    JSON

 4. Создать внешний репозиторий c названием JSON - создаем на GitHub новый репозиторий.
 5. Клонировать репозиторий JSON на локальный компьютер - в code копируем https репозитория и через git bush комманда git clone
    https://github.com/EgorIvin/JSON.git (клонируем репозиторий с внешнего в локальный) 
 6. Внутри локального JSON создать файл “new.json” - переходим в папку cd JSON и создаем фаил touch new.json.json
 7. Добавить файл под гит - git add new.json.json
 8. Закоммитить файл - git commit -m "Add json file new.json.json"  
 9. Отправить файл на внешний GitHub репозиторий - пушим - git push 
 10. Отредактировать содержание файла “new.json” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате JSON. - 
    vim new.json.json.  
  
  { 
      "Name": "Ivin Egor",
      "Age": "23",
      "Pets": "0",
      "Many": " 130 000"
   }

 11. Отправить изменения на внешний репозиторий - git status (видим что наш фаил изменился), git add new.json.json, git commit -m "Add info about me in file new.json.json", 
     git push.
 12. Создать файл preferences.json - touch preferences.json
 13. В файл preferences.json добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, страна которую хотели бы посетить) в формате JSON.
     vim pregerences.json
  {
   "Favourite film": "Gentlemen by Guy Ritchie",
   "TV series": "Friends" ,
   "Food": "pizza",
   "Time": "Summer/Winter",
   "Country": "USA"
   }
 14. Создать файл skills.json добавить информацию о скиллах которые будут изучены на курсе в формате JSON
     touch skills.json 
   {
     "Skills": " "
   }
 15. Отправить сразу 2 файла на внешний репозиторий - 
     git add . git commit -m "Add two new files preferences.json skills.json git push
 16. На веб интерфейсе создать файл bug_report.json - 
     add bug_report.json 
 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
     commit changes с комментарием 
 18. На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON.
{
  "Tittle": "Форма регистрации, несоответсвие текстового поля Name требованиям при заполнения поля текстом на кириллице",
  "Поля": "Surname" "E-mail" "Password" ,
  "Preconditation":"Поля surname e-mail password заполняются согласно требования  Вводимый текст если не указано точное значение символов для ввода  соответствует требованиям по количеству символов для указанного текстового поля", 
  "Environment":  "Google Chrome Версия 91.0.4472.77 (Официальная сборка), (64 бит) Firefox Browser 89.0 (64-битный)" ,
  "Steps":"Текстовое поле Name заполните текстом на кириллице Нажмите кнопку Submit"
  "ER": "сообщение об ошибке",
  "AR": "сообщение об успешной регистрации"     
}

 19. Сделать Commit changes (сохранить) изменения на веб интерфейсе. 
     commit changes 
 20. Синхронизировать внешний и локальный репозиторий JSON 
     git fetch и git pull 
     


     XML

 21. Создать внешний репозиторий c названием XML
 22. Клонировать репозиторий XML на локальный компьютер 
     git clone https://github.com/EgorIvin/XML.git
 23. Внутри локального XML создать файл “new.xml”.
     touch new.xml.xml 
 24. Добавить файл под гит.
     git add .
 25. Закоммитить файл.
     git commit -m "Add new file xml"
 26. Отправить файл на внешний GitHub репозиторий.
     git push
 27. Отредактировать содержание файла “new.xml” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате XML.
  
<?xml version="1.0"?>
  <ME>
        <Name> Ивин Егор Романович </Name>
        <Age> 23 </Age>
        <Pats> 0 </Pats>
        <Many> 130 000 </Many>
  </ME>

 28. Отправить изменения на внешний репозиторий - 
     git status (видим изменения), git add new.xml.xml, git push
 29. Создать файл preferences.xml 
     touch prefernces.xml
 30. В файл preferences.xml добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате XML.
     
<?xml version="1.0"?>
<ME>
        <Film> Gentlemen </Film>
        <tVserial> Friemds </tVserial>
        <Food> Pizza </Food>
        <Time> Summer, Winter </Time>
        <Country> USA </Country>

</ME>

 31. Создать файл sklls.xml добавить информацию о скиллах которые будут изучены на курсе в формате XML
    touch skills.xml 

<?xml version="1.0"?>

<Skills>

<Skills> What i know </Skills>

</Skills>

 32. Сделать коммит в одну строку - 
     git commit -am "Add two files"
 33. Отправить сразу 2 файла на внешний репозиторий 
     git push
 34. На веб интерфейсе создать файл bug_report.xml
     create file bug_report.xml
 35. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
     commit changes
 36. На веб интерфейсе модифицировать файл bug_report.xml, добавить баг репорт в формате XML.
<?xml version="1.0"?>
  <Bug_report>
    
    <Tittle> Форма регистрации, несоответсвие текстового поля Name требованиям при заполнения поля текстом на кириллице </Tittle>
    <Поля> "Surname" "E-mail" "Password"  </Поля>
    <Preconditation> Поля surname e-mail password заполняются согласно требования  Вводимый текст если не указано точное значение символов для ввода  соответствует требованиям по количеству символов для указанного текстового поля" </Preconditation>
    <Enviroment> Google Chrome Версия 91.0.4472.77 (Официальная сборка), (64 бит) Firefox Browser 89.0 (64-битный) </Enviroment> 
    <Steps> Текстовое поле Name заполните текстом на кириллице Нажмите кнопку Submit </Steps>
    <ER> сообщение об ошибке </ER>
    <AR> сообщение об успешной регистрации </AR> 
  
  </Bug_Report> 

 37. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
     commit changes
 38. Синхронизировать внешний и локальный репозиторий XML
     git fetch 
     git pull
     

    TXT

 1. Создать внешний репозиторий c названием TXT 
    
 2. Клонировать репозиторий TXT на локальный компьютер.
    git clone https://github.com/EgorIvin/TXT.git
 3. Внутри локального TXT создать файл “new.txt”.
    touch new.txt
 4. Добавить файл под гит.
    git add . или git add new.txt
 5. Закоммитить файл.
    git commit -m "Add txt fail"
 6. Отправить файл на внешний GitHub репозиторий.
    git push
 7. Отредактировать содержание файла “new.txt” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате TXT.
 8. Отправить изменения на внешний репозиторий.
    git add . или git add new.txt 
    git commit -m "add text in file"
    git push
 9. Создать файл preferences.txt
    touch preferences.txt
 10. В файл preferences.txt” добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате TXT.
 11. Создать файл sklls.txt добавить информацию о скиллах которые будут изучены на курсе в формате TXT
     touch skills.txt
 12. Сделать коммит в одну строку.
     git commit -am "Add two files" 
 13. Отправить сразу 2 файла на внешний репозиторий.
     git push
 14. На веб интерфейсе создать файл bug_report.txt.
 15. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 16. На веб интерфейсе модифицировать файл bug_report.txt, добавить баг репорт в формате TXT.
 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 18. Синхронизировать внешний и локальный репозиторий TXT 
     git fetch 
     
